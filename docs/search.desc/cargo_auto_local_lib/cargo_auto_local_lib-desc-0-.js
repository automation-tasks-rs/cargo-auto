searchState.loadedDescShard("cargo_auto_local_lib", 0, "cargo-auto\nANSI color\nPath of folder automation_tasks_rs.\nPath of file automation_tasks_rs/Cargo.toml.\nPath of file automation_tasks_rs/.file_hashes.json.\nPath of file automation_tasks_rs/.gitignore.\nPath of folder automation_tasks_rs/src.\nPath of file automation_tasks_rs/src/main.rs.\nPath of binary executable file …\nANSI color\nANSI color\nANSI color\nCalculate file hashes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCommands accessible inside a Rust project folder.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if is not run in Rust project root directory.\nCommands accessible outside a Rust project folder.\nTemplate for new_auto_for_cli (automation_tasks_rs).\nTemplate for new_cli.\nTemplate for new_pwa_wasm.\nTemplate for new_wasm.\nFunctions for various utilities.\nThe struct represents the file automation_tasks_rs/._…\nStruct with file metadata.\nCheck if all files are equal.\nhash of file\nfilename with path from Cargo.toml folder\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if the files are modified in automation_tasks_rs.\nMake a vector of file metadata.\nRead automation_tasks_rs/.file_hashes.json.\nSave the new file metadata.\nCalculate the hash for a file.\nvector of file metadata\nIs there already the automation_tasks_rs directory.\nBuild if the files are different then the hashes in …\nbuild automation_tasks_rs panic! if cannot compile …\nSub-command for bash auto-completion of <code>cargo auto</code> using …\nGet the first argument is the task: new_auto_for_cli.\nParse when it is run inside a Rust project.\nIf there is no argument then print help.\nSub-command for bash auto-completion of <code>cargo auto</code> using …\nGet the first argument is the task: new_cli, or new_wasm…\nParse when it is run outside a Rust project.\nPrint help for cargo-auto.\nCopy the Rust project into a compressed file.\nCopies the template to the <code>automation_tasks_rs</code> directory.\nCopy the Rust project into a compressed file.\nCreates a new Rust project from template.\nCopy the Rust project into a compressed file.\nCreates a new Rust project from template.\nCopy the Rust project into a compressed file.\nCreates a new Rust project from template.\nRun one shell command and return true if success.")